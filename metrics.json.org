
{"resourceMetrics":[{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"chaos-mesh"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.pod.name","value":{"stringValue":"chaos-controller-manager-7fb5d7b648-6kn8j"}},{"key":"k8s.pod.uid","value":{"stringValue":"5647837e-1c74-4fb7-92b1-e64c64342414"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.pod.phase","description":"Current phase of the pod (1 - Pending, 2 - Running, 3 - Succeeded, 4 - Failed, 5 - Unknown)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"2"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.pod.uid","value":{"stringValue":"5647837e-1c74-4fb7-92b1-e64c64342414"}},{"key":"k8s.pod.name","value":{"stringValue":"chaos-controller-manager-7fb5d7b648-6kn8j"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.namespace.name","value":{"stringValue":"chaos-mesh"}},{"key":"container.id","value":{"stringValue":"07a5362cafecd08eca93e85e2fae9dd4d0fdda8ed078a853c6ba715af9bfbfcc"}},{"key":"k8s.container.name","value":{"stringValue":"chaos-mesh"}},{"key":"container.image.name","value":{"stringValue":"ghcr.io/chaos-mesh/chaos-mesh"}},{"key":"container.image.tag","value":{"stringValue":"v2.6.3"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.container.cpu_request","description":"Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"{cpu}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asDouble":0.025}]}},{"name":"k8s.container.memory_request","description":"Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"By","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"268435456"}]}},{"name":"k8s.container.ready","description":"Whether a container has passed its readiness probe (0 for no, 1 for yes)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.container.restarts","description":"How many times the container has restarted in the recent past. This value is pulled directly from the K8s API and the value can go indefinitely high and be reset to 0 at any time depending on how your kubelet is configured to prune dead containers. It is best to not depend too much on the exact value but rather look at it as either == 0, in which case you can conclude there were no restarts in the recent past, or \u003e 0, in which case you can conclude there were restarts in the recent past, and not try and analyze the value beyond that.","unit":"{restart}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"chaos-mesh"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.pod.name","value":{"stringValue":"chaos-daemon-nwx8j"}},{"key":"k8s.pod.uid","value":{"stringValue":"8dbd647f-e60b-4ce3-bcb8-e9000bffa48c"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.pod.phase","description":"Current phase of the pod (1 - Pending, 2 - Running, 3 - Succeeded, 4 - Failed, 5 - Unknown)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"2"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.pod.uid","value":{"stringValue":"8dbd647f-e60b-4ce3-bcb8-e9000bffa48c"}},{"key":"k8s.pod.name","value":{"stringValue":"chaos-daemon-nwx8j"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.namespace.name","value":{"stringValue":"chaos-mesh"}},{"key":"container.id","value":{"stringValue":"07d9c96b120387b0f3274c9e2149d46fff246ca5111b1932a197616a15173e0f"}},{"key":"k8s.container.name","value":{"stringValue":"chaos-daemon"}},{"key":"container.image.name","value":{"stringValue":"ghcr.io/chaos-mesh/chaos-daemon"}},{"key":"container.image.tag","value":{"stringValue":"v2.6.3"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.container.ready","description":"Whether a container has passed its readiness probe (0 for no, 1 for yes)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.container.restarts","description":"How many times the container has restarted in the recent past. This value is pulled directly from the K8s API and the value can go indefinitely high and be reset to 0 at any time depending on how your kubelet is configured to prune dead containers. It is best to not depend too much on the exact value but rather look at it as either == 0, in which case you can conclude there were no restarts in the recent past, or \u003e 0, in which case you can conclude there were restarts in the recent past, and not try and analyze the value beyond that.","unit":"{restart}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.pod.name","value":{"stringValue":"svclb-kube-registry-af354b63-nm2zf"}},{"key":"k8s.pod.uid","value":{"stringValue":"819e9e5a-86a6-44a1-9c09-9429ceaff35c"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.pod.phase","description":"Current phase of the pod (1 - Pending, 2 - Running, 3 - Succeeded, 4 - Failed, 5 - Unknown)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"2"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.pod.uid","value":{"stringValue":"819e9e5a-86a6-44a1-9c09-9429ceaff35c"}},{"key":"k8s.pod.name","value":{"stringValue":"svclb-kube-registry-af354b63-nm2zf"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"container.id","value":{"stringValue":"cb66359949b837fd4bf6756088c1ece10c1417c7d2932c9e8555af0c76bc7a2c"}},{"key":"k8s.container.name","value":{"stringValue":"lb-tcp-9999"}},{"key":"container.image.name","value":{"stringValue":"docker.io/rancher/klipper-lb"}},{"key":"container.image.tag","value":{"stringValue":"v0.4.10"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.container.ready","description":"Whether a container has passed its readiness probe (0 for no, 1 for yes)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.container.restarts","description":"How many times the container has restarted in the recent past. This value is pulled directly from the K8s API and the value can go indefinitely high and be reset to 0 at any time depending on how your kubelet is configured to prune dead containers. It is best to not depend too much on the exact value but rather look at it as either == 0, in which case you can conclude there were no restarts in the recent past, or \u003e 0, in which case you can conclude there were restarts in the recent past, and not try and analyze the value beyond that.","unit":"{restart}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"chaos-mesh"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.pod.name","value":{"stringValue":"chaos-controller-manager-7fb5d7b648-jptr8"}},{"key":"k8s.pod.uid","value":{"stringValue":"bb3bb942-3b49-46fe-99b9-cb8a59827716"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.pod.phase","description":"Current phase of the pod (1 - Pending, 2 - Running, 3 - Succeeded, 4 - Failed, 5 - Unknown)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"2"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.pod.uid","value":{"stringValue":"bb3bb942-3b49-46fe-99b9-cb8a59827716"}},{"key":"k8s.pod.name","value":{"stringValue":"chaos-controller-manager-7fb5d7b648-jptr8"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.namespace.name","value":{"stringValue":"chaos-mesh"}},{"key":"container.id","value":{"stringValue":"16933849aae5d31357acce1b7c782137e70d819a24c0483d02ab373bbe228f6e"}},{"key":"k8s.container.name","value":{"stringValue":"chaos-mesh"}},{"key":"container.image.name","value":{"stringValue":"ghcr.io/chaos-mesh/chaos-mesh"}},{"key":"container.image.tag","value":{"stringValue":"v2.6.3"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.container.cpu_request","description":"Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"{cpu}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asDouble":0.025}]}},{"name":"k8s.container.memory_request","description":"Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"By","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"268435456"}]}},{"name":"k8s.container.ready","description":"Whether a container has passed its readiness probe (0 for no, 1 for yes)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.container.restarts","description":"How many times the container has restarted in the recent past. This value is pulled directly from the K8s API and the value can go indefinitely high and be reset to 0 at any time depending on how your kubelet is configured to prune dead containers. It is best to not depend too much on the exact value but rather look at it as either == 0, in which case you can conclude there were no restarts in the recent past, or \u003e 0, in which case you can conclude there were restarts in the recent past, and not try and analyze the value beyond that.","unit":"{restart}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"default"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.pod.name","value":{"stringValue":"splunk-otel-collector-operator-85c9cf68c7-2kf7h"}},{"key":"k8s.pod.uid","value":{"stringValue":"7082b726-f2c1-437d-abd0-963df87e304e"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.pod.phase","description":"Current phase of the pod (1 - Pending, 2 - Running, 3 - Succeeded, 4 - Failed, 5 - Unknown)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"2"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.pod.uid","value":{"stringValue":"7082b726-f2c1-437d-abd0-963df87e304e"}},{"key":"k8s.pod.name","value":{"stringValue":"splunk-otel-collector-operator-85c9cf68c7-2kf7h"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.namespace.name","value":{"stringValue":"default"}},{"key":"container.id","value":{"stringValue":"551b03182ebbb0759c85ca793eeec6a05db990b79fe584ad676f015156b9e881"}},{"key":"k8s.container.name","value":{"stringValue":"manager"}},{"key":"container.image.name","value":{"stringValue":"ghcr.io/open-telemetry/opentelemetry-operator/opentelemetry-operator"}},{"key":"container.image.tag","value":{"stringValue":"0.117.0"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.container.ready","description":"Whether a container has passed its readiness probe (0 for no, 1 for yes)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.container.restarts","description":"How many times the container has restarted in the recent past. This value is pulled directly from the K8s API and the value can go indefinitely high and be reset to 0 at any time depending on how your kubelet is configured to prune dead containers. It is best to not depend too much on the exact value but rather look at it as either == 0, in which case you can conclude there were no restarts in the recent past, or \u003e 0, in which case you can conclude there were restarts in the recent past, and not try and analyze the value beyond that.","unit":"{restart}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.pod.uid","value":{"stringValue":"7082b726-f2c1-437d-abd0-963df87e304e"}},{"key":"k8s.pod.name","value":{"stringValue":"splunk-otel-collector-operator-85c9cf68c7-2kf7h"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.namespace.name","value":{"stringValue":"default"}},{"key":"container.id","value":{"stringValue":"3951841f838b37109270aec890fea0ae3e5639e2b62914ea920335251f3fc253"}},{"key":"k8s.container.name","value":{"stringValue":"kube-rbac-proxy"}},{"key":"container.image.name","value":{"stringValue":"quay.io/brancz/kube-rbac-proxy"}},{"key":"container.image.tag","value":{"stringValue":"v0.18.1"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.container.ready","description":"Whether a container has passed its readiness probe (0 for no, 1 for yes)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.container.restarts","description":"How many times the container has restarted in the recent past. This value is pulled directly from the K8s API and the value can go indefinitely high and be reset to 0 at any time depending on how your kubelet is configured to prune dead containers. It is best to not depend too much on the exact value but rather look at it as either == 0, in which case you can conclude there were no restarts in the recent past, or \u003e 0, in which case you can conclude there were restarts in the recent past, and not try and analyze the value beyond that.","unit":"{restart}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.pod.name","value":{"stringValue":"helm-install-traefik-5mrhc"}},{"key":"k8s.pod.uid","value":{"stringValue":"36e0e61a-88b7-4e92-aa17-4d83ed9c5fab"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.pod.phase","description":"Current phase of the pod (1 - Pending, 2 - Running, 3 - Succeeded, 4 - Failed, 5 - Unknown)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"3"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.pod.uid","value":{"stringValue":"36e0e61a-88b7-4e92-aa17-4d83ed9c5fab"}},{"key":"k8s.pod.name","value":{"stringValue":"helm-install-traefik-5mrhc"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"container.id","value":{"stringValue":"626f0159db29d89d3a044ff5990ad52fbde34bbf2cd3edeaeeec24395ec6d834"}},{"key":"k8s.container.name","value":{"stringValue":"helm"}},{"key":"container.image.name","value":{"stringValue":"docker.io/rancher/klipper-helm"}},{"key":"container.image.tag","value":{"stringValue":"v0.9.4-build20250113"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.container.ready","description":"Whether a container has passed its readiness probe (0 for no, 1 for yes)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}},{"name":"k8s.container.restarts","description":"How many times the container has restarted in the recent past. This value is pulled directly from the K8s API and the value can go indefinitely high and be reset to 0 at any time depending on how your kubelet is configured to prune dead containers. It is best to not depend too much on the exact value but rather look at it as either == 0, in which case you can conclude there were no restarts in the recent past, or \u003e 0, in which case you can conclude there were restarts in the recent past, and not try and analyze the value beyond that.","unit":"{restart}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.pod.name","value":{"stringValue":"helm-install-traefik-crd-jw5hz"}},{"key":"k8s.pod.uid","value":{"stringValue":"3dee43b4-8d63-4d87-bae4-22e1bb2f78cd"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.pod.phase","description":"Current phase of the pod (1 - Pending, 2 - Running, 3 - Succeeded, 4 - Failed, 5 - Unknown)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"3"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.pod.uid","value":{"stringValue":"3dee43b4-8d63-4d87-bae4-22e1bb2f78cd"}},{"key":"k8s.pod.name","value":{"stringValue":"helm-install-traefik-crd-jw5hz"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"container.id","value":{"stringValue":"53a5b13aae3c32186c27cf02dcc786445928af88452f868a53018c083132a0af"}},{"key":"k8s.container.name","value":{"stringValue":"helm"}},{"key":"container.image.name","value":{"stringValue":"docker.io/rancher/klipper-helm"}},{"key":"container.image.tag","value":{"stringValue":"v0.9.4-build20250113"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.container.ready","description":"Whether a container has passed its readiness probe (0 for no, 1 for yes)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}},{"name":"k8s.container.restarts","description":"How many times the container has restarted in the recent past. This value is pulled directly from the K8s API and the value can go indefinitely high and be reset to 0 at any time depending on how your kubelet is configured to prune dead containers. It is best to not depend too much on the exact value but rather look at it as either == 0, in which case you can conclude there were no restarts in the recent past, or \u003e 0, in which case you can conclude there were restarts in the recent past, and not try and analyze the value beyond that.","unit":"{restart}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.pod.name","value":{"stringValue":"metrics-server-7bf7d58749-6jsds"}},{"key":"k8s.pod.uid","value":{"stringValue":"5b167ae6-6771-4049-9704-788113b5ae45"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.pod.phase","description":"Current phase of the pod (1 - Pending, 2 - Running, 3 - Succeeded, 4 - Failed, 5 - Unknown)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"2"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.pod.uid","value":{"stringValue":"5b167ae6-6771-4049-9704-788113b5ae45"}},{"key":"k8s.pod.name","value":{"stringValue":"metrics-server-7bf7d58749-6jsds"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"container.id","value":{"stringValue":"eb885453a03dcaa967e6e2bb984d3f531e185c272592159da3f5ab1ff5d8ad1f"}},{"key":"k8s.container.name","value":{"stringValue":"metrics-server"}},{"key":"container.image.name","value":{"stringValue":"docker.io/rancher/mirrored-metrics-server"}},{"key":"container.image.tag","value":{"stringValue":"v0.7.2"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.container.cpu_request","description":"Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"{cpu}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asDouble":0.1}]}},{"name":"k8s.container.memory_request","description":"Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"By","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"73400320"}]}},{"name":"k8s.container.ready","description":"Whether a container has passed its readiness probe (0 for no, 1 for yes)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.container.restarts","description":"How many times the container has restarted in the recent past. This value is pulled directly from the K8s API and the value can go indefinitely high and be reset to 0 at any time depending on how your kubelet is configured to prune dead containers. It is best to not depend too much on the exact value but rather look at it as either == 0, in which case you can conclude there were no restarts in the recent past, or \u003e 0, in which case you can conclude there were restarts in the recent past, and not try and analyze the value beyond that.","unit":"{restart}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.pod.name","value":{"stringValue":"traefik-5cbdcf97f4-vpwd7"}},{"key":"k8s.pod.uid","value":{"stringValue":"0219cd4b-c954-491f-8a1b-596c22a87405"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.pod.phase","description":"Current phase of the pod (1 - Pending, 2 - Running, 3 - Succeeded, 4 - Failed, 5 - Unknown)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"2"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.pod.uid","value":{"stringValue":"0219cd4b-c954-491f-8a1b-596c22a87405"}},{"key":"k8s.pod.name","value":{"stringValue":"traefik-5cbdcf97f4-vpwd7"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"container.id","value":{"stringValue":"e5f79fd769bad76266b32ceba4d8fd9977d7a548af72146e9fe73745958d9c23"}},{"key":"k8s.container.name","value":{"stringValue":"traefik"}},{"key":"container.image.name","value":{"stringValue":"docker.io/rancher/mirrored-library-traefik"}},{"key":"container.image.tag","value":{"stringValue":"2.11.20"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.container.ready","description":"Whether a container has passed its readiness probe (0 for no, 1 for yes)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.container.restarts","description":"How many times the container has restarted in the recent past. This value is pulled directly from the K8s API and the value can go indefinitely high and be reset to 0 at any time depending on how your kubelet is configured to prune dead containers. It is best to not depend too much on the exact value but rather look at it as either == 0, in which case you can conclude there were no restarts in the recent past, or \u003e 0, in which case you can conclude there were restarts in the recent past, and not try and analyze the value beyond that.","unit":"{restart}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"chaos-mesh"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.pod.name","value":{"stringValue":"chaos-dns-server-5fd67ff77b-v7cw5"}},{"key":"k8s.pod.uid","value":{"stringValue":"20188b85-6e94-49bd-9bf6-2c5b735dbf03"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.pod.phase","description":"Current phase of the pod (1 - Pending, 2 - Running, 3 - Succeeded, 4 - Failed, 5 - Unknown)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"2"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.pod.uid","value":{"stringValue":"20188b85-6e94-49bd-9bf6-2c5b735dbf03"}},{"key":"k8s.pod.name","value":{"stringValue":"chaos-dns-server-5fd67ff77b-v7cw5"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.namespace.name","value":{"stringValue":"chaos-mesh"}},{"key":"container.id","value":{"stringValue":"4fbf47888289f906d481ed47b2efddea1f63d935c13558bc891114f48c053546"}},{"key":"k8s.container.name","value":{"stringValue":"chaos-dns-server"}},{"key":"container.image.name","value":{"stringValue":"ghcr.io/chaos-mesh/chaos-coredns"}},{"key":"container.image.tag","value":{"stringValue":"v0.2.6"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.container.cpu_request","description":"Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"{cpu}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asDouble":0.1}]}},{"name":"k8s.container.memory_request","description":"Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"By","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"73400320"}]}},{"name":"k8s.container.ready","description":"Whether a container has passed its readiness probe (0 for no, 1 for yes)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.container.restarts","description":"How many times the container has restarted in the recent past. This value is pulled directly from the K8s API and the value can go indefinitely high and be reset to 0 at any time depending on how your kubelet is configured to prune dead containers. It is best to not depend too much on the exact value but rather look at it as either == 0, in which case you can conclude there were no restarts in the recent past, or \u003e 0, in which case you can conclude there were restarts in the recent past, and not try and analyze the value beyond that.","unit":"{restart}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"default"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.pod.name","value":{"stringValue":"splunk-otel-collector-agent-qndqs"}},{"key":"k8s.pod.uid","value":{"stringValue":"f3c3ad12-5819-4b26-83ac-13407b6eebbb"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.pod.phase","description":"Current phase of the pod (1 - Pending, 2 - Running, 3 - Succeeded, 4 - Failed, 5 - Unknown)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"2"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.pod.uid","value":{"stringValue":"f3c3ad12-5819-4b26-83ac-13407b6eebbb"}},{"key":"k8s.pod.name","value":{"stringValue":"splunk-otel-collector-agent-qndqs"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.namespace.name","value":{"stringValue":"default"}},{"key":"container.id","value":{"stringValue":"f4fb399dcb7f835e3a5bf2f7113a6ff81c478e831e668419eb2da60fca35fdb4"}},{"key":"k8s.container.name","value":{"stringValue":"otel-collector"}},{"key":"container.image.name","value":{"stringValue":"quay.io/signalfx/splunk-otel-collector"}},{"key":"container.image.tag","value":{"stringValue":"0.120.0"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.container.cpu_limit","description":"Maximum resource limit set for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"{cpu}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asDouble":0.2}]}},{"name":"k8s.container.cpu_request","description":"Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"{cpu}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asDouble":0.2}]}},{"name":"k8s.container.memory_limit","description":"Maximum resource limit set for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"By","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"524288000"}]}},{"name":"k8s.container.memory_request","description":"Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"By","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"524288000"}]}},{"name":"k8s.container.ready","description":"Whether a container has passed its readiness probe (0 for no, 1 for yes)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.container.restarts","description":"How many times the container has restarted in the recent past. This value is pulled directly from the K8s API and the value can go indefinitely high and be reset to 0 at any time depending on how your kubelet is configured to prune dead containers. It is best to not depend too much on the exact value but rather look at it as either == 0, in which case you can conclude there were no restarts in the recent past, or \u003e 0, in which case you can conclude there were restarts in the recent past, and not try and analyze the value beyond that.","unit":"{restart}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"default"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.pod.name","value":{"stringValue":"splunk-otel-collector-k8s-cluster-receiver-77df4b7768-mr9s2"}},{"key":"k8s.pod.uid","value":{"stringValue":"2bf9944f-10c1-4c5c-b6e1-1e48e0e3cb4b"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.pod.phase","description":"Current phase of the pod (1 - Pending, 2 - Running, 3 - Succeeded, 4 - Failed, 5 - Unknown)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"2"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.pod.uid","value":{"stringValue":"2bf9944f-10c1-4c5c-b6e1-1e48e0e3cb4b"}},{"key":"k8s.pod.name","value":{"stringValue":"splunk-otel-collector-k8s-cluster-receiver-77df4b7768-mr9s2"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.namespace.name","value":{"stringValue":"default"}},{"key":"container.id","value":{"stringValue":"a043d1ac673b3372eb4b8373458b3ceab9b349aa0fad656e9a6a7f6048de90db"}},{"key":"k8s.container.name","value":{"stringValue":"otel-collector"}},{"key":"container.image.name","value":{"stringValue":"quay.io/signalfx/splunk-otel-collector"}},{"key":"container.image.tag","value":{"stringValue":"0.120.0"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.container.cpu_limit","description":"Maximum resource limit set for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"{cpu}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asDouble":0.2}]}},{"name":"k8s.container.cpu_request","description":"Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"{cpu}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asDouble":0.2}]}},{"name":"k8s.container.memory_limit","description":"Maximum resource limit set for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"By","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"524288000"}]}},{"name":"k8s.container.memory_request","description":"Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"By","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"524288000"}]}},{"name":"k8s.container.ready","description":"Whether a container has passed its readiness probe (0 for no, 1 for yes)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.container.restarts","description":"How many times the container has restarted in the recent past. This value is pulled directly from the K8s API and the value can go indefinitely high and be reset to 0 at any time depending on how your kubelet is configured to prune dead containers. It is best to not depend too much on the exact value but rather look at it as either == 0, in which case you can conclude there were no restarts in the recent past, or \u003e 0, in which case you can conclude there were restarts in the recent past, and not try and analyze the value beyond that.","unit":"{restart}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.pod.name","value":{"stringValue":"coredns-ccb96694c-wspdd"}},{"key":"k8s.pod.uid","value":{"stringValue":"5abccb4f-f675-48d5-b862-330955aeca56"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.pod.phase","description":"Current phase of the pod (1 - Pending, 2 - Running, 3 - Succeeded, 4 - Failed, 5 - Unknown)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"2"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.pod.uid","value":{"stringValue":"5abccb4f-f675-48d5-b862-330955aeca56"}},{"key":"k8s.pod.name","value":{"stringValue":"coredns-ccb96694c-wspdd"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"container.id","value":{"stringValue":"d47877e2c11ea37f9261daa79fb81f5bd6022961ad24abc763fde9e069babaa4"}},{"key":"k8s.container.name","value":{"stringValue":"coredns"}},{"key":"container.image.name","value":{"stringValue":"docker.io/rancher/mirrored-coredns-coredns"}},{"key":"container.image.tag","value":{"stringValue":"1.12.0"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.container.cpu_request","description":"Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"{cpu}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asDouble":0.1}]}},{"name":"k8s.container.memory_limit","description":"Maximum resource limit set for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"By","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"178257920"}]}},{"name":"k8s.container.memory_request","description":"Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"By","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"73400320"}]}},{"name":"k8s.container.ready","description":"Whether a container has passed its readiness probe (0 for no, 1 for yes)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.container.restarts","description":"How many times the container has restarted in the recent past. This value is pulled directly from the K8s API and the value can go indefinitely high and be reset to 0 at any time depending on how your kubelet is configured to prune dead containers. It is best to not depend too much on the exact value but rather look at it as either == 0, in which case you can conclude there were no restarts in the recent past, or \u003e 0, in which case you can conclude there were restarts in the recent past, and not try and analyze the value beyond that.","unit":"{restart}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.pod.name","value":{"stringValue":"local-path-provisioner-5b5f758bcf-mz52p"}},{"key":"k8s.pod.uid","value":{"stringValue":"78046631-50d3-4c64-a1dd-fa5b6c21f239"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.pod.phase","description":"Current phase of the pod (1 - Pending, 2 - Running, 3 - Succeeded, 4 - Failed, 5 - Unknown)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"2"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.pod.uid","value":{"stringValue":"78046631-50d3-4c64-a1dd-fa5b6c21f239"}},{"key":"k8s.pod.name","value":{"stringValue":"local-path-provisioner-5b5f758bcf-mz52p"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"container.id","value":{"stringValue":"b64867a0f9c031a2da0e94791226459273697b6b2f5fb826ac329336ba026229"}},{"key":"k8s.container.name","value":{"stringValue":"local-path-provisioner"}},{"key":"container.image.name","value":{"stringValue":"docker.io/rancher/local-path-provisioner"}},{"key":"container.image.tag","value":{"stringValue":"v0.0.31"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.container.ready","description":"Whether a container has passed its readiness probe (0 for no, 1 for yes)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.container.restarts","description":"How many times the container has restarted in the recent past. This value is pulled directly from the K8s API and the value can go indefinitely high and be reset to 0 at any time depending on how your kubelet is configured to prune dead containers. It is best to not depend too much on the exact value but rather look at it as either == 0, in which case you can conclude there were no restarts in the recent past, or \u003e 0, in which case you can conclude there were restarts in the recent past, and not try and analyze the value beyond that.","unit":"{restart}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"chaos-mesh"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.pod.name","value":{"stringValue":"chaos-controller-manager-7fb5d7b648-7l9vl"}},{"key":"k8s.pod.uid","value":{"stringValue":"663eb103-e639-49bf-8292-9e9151e62cbf"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.pod.phase","description":"Current phase of the pod (1 - Pending, 2 - Running, 3 - Succeeded, 4 - Failed, 5 - Unknown)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"2"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.pod.uid","value":{"stringValue":"663eb103-e639-49bf-8292-9e9151e62cbf"}},{"key":"k8s.pod.name","value":{"stringValue":"chaos-controller-manager-7fb5d7b648-7l9vl"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.namespace.name","value":{"stringValue":"chaos-mesh"}},{"key":"container.id","value":{"stringValue":"be06d9718a71f1edf5178d9a2152cb501197becfd26210e8542bb8ce8c884dab"}},{"key":"k8s.container.name","value":{"stringValue":"chaos-mesh"}},{"key":"container.image.name","value":{"stringValue":"ghcr.io/chaos-mesh/chaos-mesh"}},{"key":"container.image.tag","value":{"stringValue":"v2.6.3"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.container.cpu_request","description":"Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"{cpu}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asDouble":0.025}]}},{"name":"k8s.container.memory_request","description":"Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"By","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"268435456"}]}},{"name":"k8s.container.ready","description":"Whether a container has passed its readiness probe (0 for no, 1 for yes)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.container.restarts","description":"How many times the container has restarted in the recent past. This value is pulled directly from the K8s API and the value can go indefinitely high and be reset to 0 at any time depending on how your kubelet is configured to prune dead containers. It is best to not depend too much on the exact value but rather look at it as either == 0, in which case you can conclude there were no restarts in the recent past, or \u003e 0, in which case you can conclude there were restarts in the recent past, and not try and analyze the value beyond that.","unit":"{restart}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"chaos-mesh"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.pod.name","value":{"stringValue":"chaos-dashboard-6b476b8f6-84qkl"}},{"key":"k8s.pod.uid","value":{"stringValue":"5529c4f0-e882-42c9-9674-acba77dc3c4e"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.pod.phase","description":"Current phase of the pod (1 - Pending, 2 - Running, 3 - Succeeded, 4 - Failed, 5 - Unknown)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"2"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.pod.uid","value":{"stringValue":"5529c4f0-e882-42c9-9674-acba77dc3c4e"}},{"key":"k8s.pod.name","value":{"stringValue":"chaos-dashboard-6b476b8f6-84qkl"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.namespace.name","value":{"stringValue":"chaos-mesh"}},{"key":"container.id","value":{"stringValue":"04cf23834d4ca59ae7111f45beea3dadf6bb35255cd1b5e3105d993e6e896675"}},{"key":"k8s.container.name","value":{"stringValue":"chaos-dashboard"}},{"key":"container.image.name","value":{"stringValue":"ghcr.io/chaos-mesh/chaos-dashboard"}},{"key":"container.image.tag","value":{"stringValue":"v2.6.3"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.container.cpu_request","description":"Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"{cpu}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asDouble":0.025}]}},{"name":"k8s.container.memory_request","description":"Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"By","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"268435456"}]}},{"name":"k8s.container.ready","description":"Whether a container has passed its readiness probe (0 for no, 1 for yes)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.container.restarts","description":"How many times the container has restarted in the recent past. This value is pulled directly from the K8s API and the value can go indefinitely high and be reset to 0 at any time depending on how your kubelet is configured to prune dead containers. It is best to not depend too much on the exact value but rather look at it as either == 0, in which case you can conclude there were no restarts in the recent past, or \u003e 0, in which case you can conclude there were restarts in the recent past, and not try and analyze the value beyond that.","unit":"{restart}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.pod.name","value":{"stringValue":"kube-registry-v0-ld9gw"}},{"key":"k8s.pod.uid","value":{"stringValue":"40afbcd3-ee0e-4e7b-91cd-505480e25086"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.pod.phase","description":"Current phase of the pod (1 - Pending, 2 - Running, 3 - Succeeded, 4 - Failed, 5 - Unknown)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"2"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.pod.uid","value":{"stringValue":"40afbcd3-ee0e-4e7b-91cd-505480e25086"}},{"key":"k8s.pod.name","value":{"stringValue":"kube-registry-v0-ld9gw"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"container.id","value":{"stringValue":"8f4dba081cac16b7a190580df2f3dc647861c183c2c0c3d02102b92bf3c135b9"}},{"key":"k8s.container.name","value":{"stringValue":"registry"}},{"key":"container.image.name","value":{"stringValue":"docker.io/library/registry"}},{"key":"container.image.tag","value":{"stringValue":"2"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.container.cpu_limit","description":"Maximum resource limit set for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"{cpu}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asDouble":0.1}]}},{"name":"k8s.container.cpu_request","description":"Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"{cpu}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asDouble":0.1}]}},{"name":"k8s.container.memory_limit","description":"Maximum resource limit set for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"By","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"209715200"}]}},{"name":"k8s.container.memory_request","description":"Resource requested for the container. See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#resourcerequirements-v1-core for details","unit":"By","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"209715200"}]}},{"name":"k8s.container.ready","description":"Whether a container has passed its readiness probe (0 for no, 1 for yes)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.container.restarts","description":"How many times the container has restarted in the recent past. This value is pulled directly from the K8s API and the value can go indefinitely high and be reset to 0 at any time depending on how your kubelet is configured to prune dead containers. It is best to not depend too much on the exact value but rather look at it as either == 0, in which case you can conclude there were no restarts in the recent past, or \u003e 0, in which case you can conclude there were restarts in the recent past, and not try and analyze the value beyond that.","unit":"{restart}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.pod.name","value":{"stringValue":"svclb-traefik-67b925c2-nwvr4"}},{"key":"k8s.pod.uid","value":{"stringValue":"a0cb988f-b307-46c7-a5bc-9d1db93bf622"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.pod.phase","description":"Current phase of the pod (1 - Pending, 2 - Running, 3 - Succeeded, 4 - Failed, 5 - Unknown)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"2"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.pod.uid","value":{"stringValue":"a0cb988f-b307-46c7-a5bc-9d1db93bf622"}},{"key":"k8s.pod.name","value":{"stringValue":"svclb-traefik-67b925c2-nwvr4"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"container.id","value":{"stringValue":"c458346ca5e903c5321b5aca85565af73b4ee6c48e0826d6043c3698fb8959a2"}},{"key":"k8s.container.name","value":{"stringValue":"lb-tcp-80"}},{"key":"container.image.name","value":{"stringValue":"docker.io/rancher/klipper-lb"}},{"key":"container.image.tag","value":{"stringValue":"v0.4.10"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.container.ready","description":"Whether a container has passed its readiness probe (0 for no, 1 for yes)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.container.restarts","description":"How many times the container has restarted in the recent past. This value is pulled directly from the K8s API and the value can go indefinitely high and be reset to 0 at any time depending on how your kubelet is configured to prune dead containers. It is best to not depend too much on the exact value but rather look at it as either == 0, in which case you can conclude there were no restarts in the recent past, or \u003e 0, in which case you can conclude there were restarts in the recent past, and not try and analyze the value beyond that.","unit":"{restart}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.pod.uid","value":{"stringValue":"a0cb988f-b307-46c7-a5bc-9d1db93bf622"}},{"key":"k8s.pod.name","value":{"stringValue":"svclb-traefik-67b925c2-nwvr4"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"container.id","value":{"stringValue":"24e2442140848970f53a20924feacd83525f5df714f1f68b29da50f6e94185ba"}},{"key":"k8s.container.name","value":{"stringValue":"lb-tcp-443"}},{"key":"container.image.name","value":{"stringValue":"docker.io/rancher/klipper-lb"}},{"key":"container.image.tag","value":{"stringValue":"v0.4.10"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.container.ready","description":"Whether a container has passed its readiness probe (0 for no, 1 for yes)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.container.restarts","description":"How many times the container has restarted in the recent past. This value is pulled directly from the K8s API and the value can go indefinitely high and be reset to 0 at any time depending on how your kubelet is configured to prune dead containers. It is best to not depend too much on the exact value but rather look at it as either == 0, in which case you can conclude there were no restarts in the recent past, or \u003e 0, in which case you can conclude there were restarts in the recent past, and not try and analyze the value beyond that.","unit":"{restart}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.uid","value":{"stringValue":"8b8d8247-96ec-4f4c-9937-5a1d37aa1fd6"}},{"key":"k8s.namespace.name","value":{"stringValue":"kube-public"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.namespace.phase","description":"The current phase of namespaces (1 for active and 0 for terminating)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.uid","value":{"stringValue":"e0cc5478-1ca8-4094-a6ed-c5a4ad1d1377"}},{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.namespace.phase","description":"The current phase of namespaces (1 for active and 0 for terminating)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.uid","value":{"stringValue":"8e4f2a36-6fa7-45fc-a1bc-b65b00c2adcf"}},{"key":"k8s.namespace.name","value":{"stringValue":"chaos-mesh"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.namespace.phase","description":"The current phase of namespaces (1 for active and 0 for terminating)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.uid","value":{"stringValue":"aba2e840-29cd-4d82-9e1e-7333850df45f"}},{"key":"k8s.namespace.name","value":{"stringValue":"default"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.namespace.phase","description":"The current phase of namespaces (1 for active and 0 for terminating)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.uid","value":{"stringValue":"487d2834-3de6-4afe-9ee2-74d722e27623"}},{"key":"k8s.namespace.name","value":{"stringValue":"kube-node-lease"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.namespace.phase","description":"The current phase of namespaces (1 for active and 0 for terminating)","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"k8s.replicationcontroller.name","value":{"stringValue":"kube-registry-v0"}},{"key":"k8s.replicationcontroller.uid","value":{"stringValue":"ca83d557-e269-421c-8807-821d1d4ebf5c"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.replication_controller.available","description":"Total number of available pods (ready for at least minReadySeconds) targeted by this replication_controller","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.replication_controller.desired","description":"Number of desired pods in this replication_controller","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.deployment.name","value":{"stringValue":"chaos-dns-server"}},{"key":"k8s.deployment.uid","value":{"stringValue":"de6b60b6-9ffc-48b2-8e81-9ff3859c07f2"}},{"key":"k8s.namespace.name","value":{"stringValue":"chaos-mesh"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.deployment.available","description":"Total number of available pods (ready for at least minReadySeconds) targeted by this deployment","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.deployment.desired","description":"Number of desired pods in this deployment","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.deployment.name","value":{"stringValue":"coredns"}},{"key":"k8s.deployment.uid","value":{"stringValue":"ee42eb4c-6366-46dd-a026-3ac07f010008"}},{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.deployment.available","description":"Total number of available pods (ready for at least minReadySeconds) targeted by this deployment","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.deployment.desired","description":"Number of desired pods in this deployment","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.deployment.name","value":{"stringValue":"traefik"}},{"key":"k8s.deployment.uid","value":{"stringValue":"9fa2a775-0edb-4878-a7ed-2878c5f90197"}},{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.deployment.available","description":"Total number of available pods (ready for at least minReadySeconds) targeted by this deployment","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.deployment.desired","description":"Number of desired pods in this deployment","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.deployment.name","value":{"stringValue":"chaos-controller-manager"}},{"key":"k8s.deployment.uid","value":{"stringValue":"3c8986f3-17d2-4ba6-9186-e42d9b759137"}},{"key":"k8s.namespace.name","value":{"stringValue":"chaos-mesh"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.deployment.available","description":"Total number of available pods (ready for at least minReadySeconds) targeted by this deployment","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"3"}]}},{"name":"k8s.deployment.desired","description":"Number of desired pods in this deployment","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"3"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.deployment.name","value":{"stringValue":"chaos-dashboard"}},{"key":"k8s.deployment.uid","value":{"stringValue":"57de4afe-8b0f-4111-bb63-b02d6192cfca"}},{"key":"k8s.namespace.name","value":{"stringValue":"chaos-mesh"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.deployment.available","description":"Total number of available pods (ready for at least minReadySeconds) targeted by this deployment","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.deployment.desired","description":"Number of desired pods in this deployment","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.deployment.name","value":{"stringValue":"splunk-otel-collector-k8s-cluster-receiver"}},{"key":"k8s.deployment.uid","value":{"stringValue":"93325edc-325f-4a9c-b314-f696f15ffd70"}},{"key":"k8s.namespace.name","value":{"stringValue":"default"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.deployment.available","description":"Total number of available pods (ready for at least minReadySeconds) targeted by this deployment","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.deployment.desired","description":"Number of desired pods in this deployment","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.deployment.name","value":{"stringValue":"splunk-otel-collector-operator"}},{"key":"k8s.deployment.uid","value":{"stringValue":"61bb1bf7-be06-471e-ae1e-1f90e5ea271c"}},{"key":"k8s.namespace.name","value":{"stringValue":"default"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.deployment.available","description":"Total number of available pods (ready for at least minReadySeconds) targeted by this deployment","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.deployment.desired","description":"Number of desired pods in this deployment","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.deployment.name","value":{"stringValue":"local-path-provisioner"}},{"key":"k8s.deployment.uid","value":{"stringValue":"e3ddf0d9-3cb7-4fd3-980c-0e9729c6665f"}},{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.deployment.available","description":"Total number of available pods (ready for at least minReadySeconds) targeted by this deployment","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.deployment.desired","description":"Number of desired pods in this deployment","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.deployment.name","value":{"stringValue":"metrics-server"}},{"key":"k8s.deployment.uid","value":{"stringValue":"5b961b52-1468-43b2-8f28-9c8659a1c9f2"}},{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.deployment.available","description":"Total number of available pods (ready for at least minReadySeconds) targeted by this deployment","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.deployment.desired","description":"Number of desired pods in this deployment","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"default"}},{"key":"k8s.replicaset.name","value":{"stringValue":"splunk-otel-collector-operator-85c9cf68c7"}},{"key":"k8s.replicaset.uid","value":{"stringValue":"b5bb33fd-27e7-469f-9cf5-b821b1c16927"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.replicaset.available","description":"Total number of available pods (ready for at least minReadySeconds) targeted by this replicaset","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.replicaset.desired","description":"Number of desired pods in this replicaset","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"k8s.replicaset.name","value":{"stringValue":"coredns-ccb96694c"}},{"key":"k8s.replicaset.uid","value":{"stringValue":"32955061-9dca-4ec2-af6d-4fb04c3702de"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.replicaset.available","description":"Total number of available pods (ready for at least minReadySeconds) targeted by this replicaset","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.replicaset.desired","description":"Number of desired pods in this replicaset","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"chaos-mesh"}},{"key":"k8s.replicaset.name","value":{"stringValue":"chaos-dashboard-6b476b8f6"}},{"key":"k8s.replicaset.uid","value":{"stringValue":"3c1b4907-23e3-4020-b6e7-dda019d521af"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.replicaset.available","description":"Total number of available pods (ready for at least minReadySeconds) targeted by this replicaset","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.replicaset.desired","description":"Number of desired pods in this replicaset","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"chaos-mesh"}},{"key":"k8s.replicaset.name","value":{"stringValue":"chaos-dns-server-5fd67ff77b"}},{"key":"k8s.replicaset.uid","value":{"stringValue":"e1379ddd-8d5e-488d-8009-b502390bf97b"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.replicaset.available","description":"Total number of available pods (ready for at least minReadySeconds) targeted by this replicaset","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.replicaset.desired","description":"Number of desired pods in this replicaset","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"k8s.replicaset.name","value":{"stringValue":"local-path-provisioner-5b5f758bcf"}},{"key":"k8s.replicaset.uid","value":{"stringValue":"fa79c293-00ba-43e3-b5a3-2a1e1abafcf6"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.replicaset.available","description":"Total number of available pods (ready for at least minReadySeconds) targeted by this replicaset","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.replicaset.desired","description":"Number of desired pods in this replicaset","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"k8s.replicaset.name","value":{"stringValue":"metrics-server-7bf7d58749"}},{"key":"k8s.replicaset.uid","value":{"stringValue":"ad265f84-a094-4d6d-8f7f-9ec5e1798c72"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.replicaset.available","description":"Total number of available pods (ready for at least minReadySeconds) targeted by this replicaset","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.replicaset.desired","description":"Number of desired pods in this replicaset","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"k8s.replicaset.name","value":{"stringValue":"traefik-5cbdcf97f4"}},{"key":"k8s.replicaset.uid","value":{"stringValue":"aecc8472-fbf0-4fee-9304-9517831745ce"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.replicaset.available","description":"Total number of available pods (ready for at least minReadySeconds) targeted by this replicaset","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.replicaset.desired","description":"Number of desired pods in this replicaset","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"chaos-mesh"}},{"key":"k8s.replicaset.name","value":{"stringValue":"chaos-controller-manager-7fb5d7b648"}},{"key":"k8s.replicaset.uid","value":{"stringValue":"df04c34c-eb4e-401e-a788-e93313984f78"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.replicaset.available","description":"Total number of available pods (ready for at least minReadySeconds) targeted by this replicaset","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"3"}]}},{"name":"k8s.replicaset.desired","description":"Number of desired pods in this replicaset","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"3"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"default"}},{"key":"k8s.replicaset.name","value":{"stringValue":"splunk-otel-collector-k8s-cluster-receiver-77df4b7768"}},{"key":"k8s.replicaset.uid","value":{"stringValue":"b16e2428-d95b-41eb-9976-937838fae140"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.replicaset.available","description":"Total number of available pods (ready for at least minReadySeconds) targeted by this replicaset","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.replicaset.desired","description":"Number of desired pods in this replicaset","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"k8s.daemonset.name","value":{"stringValue":"svclb-traefik-67b925c2"}},{"key":"k8s.daemonset.uid","value":{"stringValue":"d71a1157-5540-46ee-a815-d6ab1d20c295"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.daemonset.current_scheduled_nodes","description":"Number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod","unit":"{node}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.daemonset.desired_scheduled_nodes","description":"Number of nodes that should be running the daemon pod (including nodes currently running the daemon pod)","unit":"{node}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.daemonset.misscheduled_nodes","description":"Number of nodes that are running the daemon pod, but are not supposed to run the daemon pod","unit":"{node}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}},{"name":"k8s.daemonset.ready_nodes","description":"Number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready","unit":"{node}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"chaos-mesh"}},{"key":"k8s.daemonset.name","value":{"stringValue":"chaos-daemon"}},{"key":"k8s.daemonset.uid","value":{"stringValue":"ed5e805f-02bb-467e-a615-66b6df020c55"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.daemonset.current_scheduled_nodes","description":"Number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod","unit":"{node}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.daemonset.desired_scheduled_nodes","description":"Number of nodes that should be running the daemon pod (including nodes currently running the daemon pod)","unit":"{node}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.daemonset.misscheduled_nodes","description":"Number of nodes that are running the daemon pod, but are not supposed to run the daemon pod","unit":"{node}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}},{"name":"k8s.daemonset.ready_nodes","description":"Number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready","unit":"{node}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"default"}},{"key":"k8s.daemonset.name","value":{"stringValue":"splunk-otel-collector-agent"}},{"key":"k8s.daemonset.uid","value":{"stringValue":"fe9b4567-f3f9-4e3d-825f-c1a3b8804185"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.daemonset.current_scheduled_nodes","description":"Number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod","unit":"{node}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.daemonset.desired_scheduled_nodes","description":"Number of nodes that should be running the daemon pod (including nodes currently running the daemon pod)","unit":"{node}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.daemonset.misscheduled_nodes","description":"Number of nodes that are running the daemon pod, but are not supposed to run the daemon pod","unit":"{node}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}},{"name":"k8s.daemonset.ready_nodes","description":"Number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready","unit":"{node}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"k8s.daemonset.name","value":{"stringValue":"svclb-kube-registry-af354b63"}},{"key":"k8s.daemonset.uid","value":{"stringValue":"cba7d536-fa38-4dd1-9300-094da1b18148"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.daemonset.current_scheduled_nodes","description":"Number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod","unit":"{node}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.daemonset.desired_scheduled_nodes","description":"Number of nodes that should be running the daemon pod (including nodes currently running the daemon pod)","unit":"{node}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.daemonset.misscheduled_nodes","description":"Number of nodes that are running the daemon pod, but are not supposed to run the daemon pod","unit":"{node}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}},{"name":"k8s.daemonset.ready_nodes","description":"Number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready","unit":"{node}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"k8s.job.name","value":{"stringValue":"helm-install-traefik"}},{"key":"k8s.job.uid","value":{"stringValue":"141706a8-6ddc-4382-98f6-3f9781b9fcaf"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.job.active_pods","description":"The number of actively running pods for a job","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}},{"name":"k8s.job.desired_successful_pods","description":"The desired number of successfully finished pods the job should be run with","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.job.failed_pods","description":"The number of pods which reached phase Failed for a job","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}},{"name":"k8s.job.max_parallel_pods","description":"The max desired number of pods the job should run at any given time","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.job.successful_pods","description":"The number of pods which reached phase Succeeded for a job","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.namespace.name","value":{"stringValue":"kube-system"}},{"key":"k8s.job.name","value":{"stringValue":"helm-install-traefik-crd"}},{"key":"k8s.job.uid","value":{"stringValue":"d97704a2-9174-40a9-bbf3-a50ffb641be9"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.job.active_pods","description":"The number of actively running pods for a job","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}},{"name":"k8s.job.desired_successful_pods","description":"The desired number of successfully finished pods the job should be run with","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.job.failed_pods","description":"The number of pods which reached phase Failed for a job","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"0"}]}},{"name":"k8s.job.max_parallel_pods","description":"The max desired number of pods the job should run at any given time","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}},{"name":"k8s.job.successful_pods","description":"The number of pods which reached phase Succeeded for a job","unit":"{pod}","gauge":{"dataPoints":[{"startTimeUnixNano":"1742310870810270553","timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"},{"resource":{"attributes":[{"key":"k8s.node.uid","value":{"stringValue":"b4f3500a-1bf4-448a-8462-0b601c4194d6"}},{"key":"k8s.node.name","value":{"stringValue":"loadgen"}},{"key":"metric_source","value":{"stringValue":"kubernetes"}},{"key":"k8s.cluster.name","value":{"stringValue":"loadgen-k3s-cluster"}},{"key":"receiver","value":{"stringValue":"k8scluster"}}]},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/k8sclusterreceiver","version":"v0.120.0"},"metrics":[{"name":"k8s.node.condition_ready","description":"Ready condition status of the node (true=1, false=0, unknown=-1)","gauge":{"dataPoints":[{"timeUnixNano":"1742310880926650519","asInt":"1"}]}}]}],"schemaUrl":"https://opentelemetry.io/schemas/1.18.0"}]}